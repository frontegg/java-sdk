name: Frontegg Java SDK - create release

on:
  push:
    branches:
      - "main"
permissions:
  actions: read
  checks: write
  contents: write
  
  

env:
  LANG: en_US.UTF-8
jobs:
  build-and-test:
    name: Build JDK 17
    runs-on: ubuntu-latest
    if: |
      github.repository == 'frontegg/java-sdk' &&
      !startsWith(github.event.head_commit.message, '[maven-release-plugin]')
      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          fetch-depth: 0
      - name: Set git config
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      - name: Cancel previous runs
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          server-id: ossrh
          server-username: NEXUS_USERNAME
          server-password: NEXUS_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and test
        run: mvn -e -B clean install test
      - name: prepare release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn -e -B -Prelease release:prepare
  release:
    name: Release new version
    runs-on: ubuntu-latest
    if: |
      github.repository == 'frontegg/java-sdk' &&
      startsWith(github.event.head_commit.message, '[maven-release-plugin] prepare release')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
          fetch-depth: 0
      - name: Cancel previous runs
        uses: n1hility/cancel-previous-runs@v3
        with:
          token: ${{ secrets.GH_REPOSITORY_ADMIN_TOKEN }}
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          server-id: ossrh
          server-username: NEXUS_USERNAME
          server-password: NEXUS_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build
        run: mvn -e -B clean install
      - name: Preapare release
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn -e -B -Prelease deploy
